WITH SKILL_INFO AS (
    SELECT 
        SUM(CASE WHEN CATEGORY = 'Front End' THEN CODE ELSE 0 END) AS FRONTEND_CODE,
        MAX(CASE WHEN NAME = 'Python' THEN CODE ELSE 0 END) AS PYTHON_CODE,
        MAX(CASE WHEN NAME = 'C#' THEN CODE ELSE 0 END) AS CSHARP_CODE
    FROM SKILLCODES
)
SELECT 
    CASE 
        WHEN (d.SKILL_CODE & si.FRONTEND_CODE) > 0 AND (d.SKILL_CODE & si.PYTHON_CODE) > 0 THEN 'A'
        WHEN (d.SKILL_CODE & si.CSHARP_CODE) > 0 THEN 'B'
        WHEN (d.SKILL_CODE & si.FRONTEND_CODE) > 0 THEN 'C'
    END AS GRADE,
    d.ID,
    d.EMAIL
FROM 
    DEVELOPERS d
CROSS JOIN 
    SKILL_INFO si
WHERE 
    d.SKILL_CODE IS NOT NULL
    AND (
        ((d.SKILL_CODE & si.FRONTEND_CODE) > 0 AND (d.SKILL_CODE & si.PYTHON_CODE) > 0)
        OR (d.SKILL_CODE & si.CSHARP_CODE) > 0
        OR (d.SKILL_CODE & si.FRONTEND_CODE) > 0
    )
ORDER BY 
    CASE 
        WHEN (d.SKILL_CODE & si.FRONTEND_CODE) > 0 AND (d.SKILL_CODE & si.PYTHON_CODE) > 0 THEN 'A'
        WHEN (d.SKILL_CODE & si.CSHARP_CODE) > 0 THEN 'B'
        WHEN (d.SKILL_CODE & si.FRONTEND_CODE) > 0 THEN 'C'
    END,
    d.ID;